- name: install frontends
  hosts:
    - frontends_a
    - frontends_c
  remote_user: root

  tasks:
    - name: make sure that systemd-resolved is disabled
      systemd:
        name: systemd-resolved
        enabled: no
    - name: shut down systemd-resolved
      service:
        name: systemd-resolved
        state: stopped
    - name: set resolver to 8.8.8.8
      copy:
        content: "nameserver 8.8.8.8\n"
        dest: /etc/resolv.conf

    - name: Upgrade packages
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes
    - name: Check if a reboot is needed
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no
    - name: Reboot if necessary
      reboot:
        msg: "Reboot initiated by Ansible due to kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: remove root password
      user:
        name: root
        password_lock: yes

    - name: Install desec dependencies
      apt:
        pkg:
        - curl
        - git
        - httpie
        - jq
        - libmysqlclient-dev
        - python3-dev
        - python3-venv
        - docker.io
        - certbot
        - acpid

    - name: Install docker-compose
      command: {{ item }}
        with_items:
        - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64" -o /usr/local/bin/docker-compose
        - chmod +x /usr/local/bin/docker-compose

#    - name: enable docker daemon (for reboots)
#      systemd:
#        name: docker
#        enable: yes

    - name: configure docker daemon
      copy:
        content: '{"userland-proxy": false}\n'
        dest: /etc/docker/daemon.json

    - name: restart docker daemon
      service:
        name: docker
        state: restarted

    - name: download frontend software
      git:
        repo: 'https://github.com/desec-io/desec-ns.git'
        dest: desec-ns
        version: main

    - name: Pull docker images for frontend
      community.general.docker_compose:
        project_src: desec-ns
        pull: yes
        state: absent

    - name: Create .env
      template:
        src: dotenv.j2
        dest: desec-ns/.env
        mode: '0600'

    - name: Upload lmdb backup
      copy:
        src: '{{ DESEC_NS_LMDB_BACKUP }}'
        dest: desec-ns/lmdb-backup/backup

    - name: Find lmdb backup
      find:
        path: desec-ns/lmdb-backup/backup/
      register: files

    - name: Restore lmdb backup
      command:
        cmd: './load.sh {{ (files.files | sort(attribute="ctime"))[-1].path | basename }}'
        chdir: desec-ns
